// <auto-generated />
using System;
using LINQ_Operations.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LINQ_Operations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240304130402_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9367),
                            FirstName = "Jack",
                            LastName = "London",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9370),
                            FirstName = "George",
                            LastName = "Orwell",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9371),
                            FirstName = "Freida",
                            LastName = "McFadden",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9372),
                            FirstName = "Lev",
                            LastName = "Tolstoy",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9373),
                            FirstName = "Oğuz",
                            LastName = "Atay",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9374),
                            FirstName = "Mihailovic",
                            LastName = "Dostoyevski",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9375),
                            FirstName = "J.K.",
                            LastName = "Rowling",
                            Status = 1
                        });
                });

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9269),
                            GenreId = "macera",
                            Price = 50.5,
                            Status = 1,
                            Title = "Beyaz Diş"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9271),
                            GenreId = "roman",
                            Price = 91.450000000000003,
                            Status = 1,
                            Title = "Suç ve Ceza"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9273),
                            GenreId = "korku",
                            Price = 100.0,
                            Status = 1,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9274),
                            GenreId = "polisiye",
                            Price = 150.80000000000001,
                            Status = 1,
                            Title = "Sakın Yalan Söyleme"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9275),
                            GenreId = "roman",
                            Price = 200.0,
                            Status = 1,
                            Title = "Savaş ve Barış"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9276),
                            GenreId = "ask",
                            Price = 82.0,
                            Status = 1,
                            Title = "Tutunamayanlar"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9277),
                            GenreId = "roman",
                            Price = 75.0,
                            Status = 1,
                            Title = "Beyaz Geceler"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9278),
                            GenreId = "roman",
                            Price = 50.0,
                            Status = 1,
                            Title = "İnsan Ne ile Yaşar"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9288),
                            GenreId = "bilimkurgu",
                            Price = 80.0,
                            Status = 1,
                            Title = "Harry Potter Azkaban Tutsağı"
                        });
                });

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.BookAuthor", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 4
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 3
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 4
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 5
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 6
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 4
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 7
                        });
                });

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "roman",
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9089),
                            Name = "Roman",
                            Status = 1
                        },
                        new
                        {
                            Id = "korku",
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9102),
                            Name = "Korku",
                            Status = 1
                        },
                        new
                        {
                            Id = "polisiye",
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9103),
                            Name = "Polisiye",
                            Status = 1
                        },
                        new
                        {
                            Id = "bilimkurgu",
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9104),
                            Name = "Bilim Kurgu",
                            Status = 1
                        },
                        new
                        {
                            Id = "ask",
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9105),
                            Name = "Aşk",
                            Status = 1
                        },
                        new
                        {
                            Id = "macera",
                            CreatedDate = new DateTime(2024, 3, 4, 16, 4, 2, 46, DateTimeKind.Local).AddTicks(9105),
                            Name = "Macera",
                            Status = 1
                        });
                });

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.Book", b =>
                {
                    b.HasOne("LINQ_Operations.Models.Concrete.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.BookAuthor", b =>
                {
                    b.HasOne("LINQ_Operations.Models.Concrete.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LINQ_Operations.Models.Concrete.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.Book", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("LINQ_Operations.Models.Concrete.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
